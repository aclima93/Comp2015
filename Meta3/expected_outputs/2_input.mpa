
{ ---------- *)
(* ---------- }
{ ----------- }
(* Program 1 *)

Program Lesson1Program1(output);   
Begin    
 Writeln('Hello World. Prepare to learn PASCAL!!');
End.

{ ---------- *)
(* ---------- }
{ ----------- }
(* Program 2 *)

Program Lesson1Program2(output);begin 
Writeln('Hello World. Prepare to learn PASCAL!!');Readln;End.

{ ---------- *)
(* ---------- }
{ ----------- }
(* Program 3 *)

Program Lesson1Program3(output);
Var Num1, Num2, Sum : Integer;  Num3, Num4, Sum5 : Integer;

Begin {no semicolon}
 Writeln('Input number 1:'); 
 Writeln('Input number 2:');
 Sum := Num1 + Num2; {addition} 
 Writeln(Sum);
End.

{ ---------- *)
(* ---------- }
{ ----------- }
(* Program 4 *)

Program Lesson2Program1(output);
Var name, surname: String;
                     
Begin
 Writeln('Enter your name:');
 Writeln('Enter your surname:');
 writeln;{new line}
 writeln;{new line}
 Writeln('Your full name is: ',name,' ',surname);
End.

{ ---------- *)
(* ---------- }
{ ----------- }
(* Program 5 *)

Program Lesson2Program2(output);
Var 
     surname: String; 

Const {the reserved word 'const' 
       is used to initialize constants}
     name = 'Victor';
                     
Begin
 Writeln('Enter your surname:');
 writeln;
 writeln;
 Writeln('Your full name is: ',name,' ',surname);
End.

{ ---------- *)
(* ---------- }
{ ----------- }
(* Program 5 *)

Program lesson2Program3(output);
Var PD, Dname, Cmodel : String;
    TotalKM, CostPD, TCostPD, Distance : Real; 
     {real is a decimal (described later)} 
                   

begin
 TCostPD := 0; 
 {note that this is called an 'initialisation'. 
  It is important to initialise variables to 0 
  so that it is 'refreshed' from the previous 
  'rubbish' value in the memory.}
 Writeln('This program prompts you to '+
        +'input the cost per litre of');
 Writeln('the petrol/diesel you spend '+ 
        +'in and the average distance you travel');
 Writeln('with your car every week. Then '+
        +'the computer calculates the total cost');
 Writeln('you spend in fuel every week.');
 Writeln('Diesel or Petrol?: ');
 Writeln('Name Of Driver: ');
 Writeln('Car Model: ');
 Writeln('Cost of Diesel/Petrol: (£) ');
 Writeln('Average distance you travel '+
        +'with your car every week: (kilometres) ');
 Writeln;
 Writeln;
 Writeln('Name of Driver:',Dname);
 Writeln('Car Model:',Cmodel);
 Writeln('Diesel/Petrol:',PD);
 Writeln('Average distance covered '+
        +'every week: ',Distance:1:2,'Km');
 Writeln('Cost of ',PD,' per liter: £',CostPD:1:2,'/litre');
 Writeln;
 Writeln;
 TCostPD := Distance * CostPD;
 Writeln('Total cost of ',PD,' per week:'+
        +'£',TCostPD:1:2); {note this,}
 TCostPD := 0;
 Writeln('Total cost of ',PD,' per week:'+
        +'£',(Distance * CostPD):1:2); {this}
 Writeln('Total cost of ',PD,' per week:'+
        +'£',Distance * CostPD); {and this - without ':1:2'}
End.
